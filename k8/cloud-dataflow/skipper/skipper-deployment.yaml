apiVersion: apps/v1
kind: Deployment
metadata:
  name: skipper
  labels:
    app: skipper
spec:
  selector:
    matchLabels:
      app: skipper
  replicas: 1
  template:
    metadata:
      labels:
        app: skipper
    spec:
      containers:
        - name: skipper
          image: springcloud/spring-cloud-skipper-server:2.9.1-SNAPSHOT
          imagePullPolicy: Always
          volumeMounts:
            - name: config
              mountPath: /workspace/config
              readOnly: true
            - name: database
              mountPath: /etc/secrets/database
              readOnly: true
          ports:
            - containerPort: 7577
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 7577
            initialDelaySeconds: 1
            periodSeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/info
              port: 7577
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 2
          startupProbe:
            tcpSocket:
              port: 7577
            initialDelaySeconds: 15
            periodSeconds: 3
            failureThreshold: 120
          resources:
            limits:
              cpu: 1.0
              memory: 1024Mi
            requests:
              cpu: 0.5
              memory: 640Mi
          env:
            - name: LANG
              value: 'en_US.utf8'
            - name: LC_ALL
              value: 'en_US.utf8'
            - name: JDK_JAVA_OPTIONS
              value: '-Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8'
            - name: SERVER_PORT
              value: '7577'
            - name: SPRING_CLOUD_CONFIG_ENABLED
              value: 'false'
            - name: SPRING_CLOUD_KUBERNETES_CONFIG_ENABLE_API
              value: 'false'
            - name: SPRING_CLOUD_KUBERNETES_SECRETS_ENABLE_API
              value: 'false'
            - name: SPRING_CLOUD_KUBERNETES_SECRETS_PATHS
              value: /etc/secrets
      initContainers:
        - name: init-postgresql-wait
          image: busybox:1
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until nc -vz postgresql 5432; do echo "waiting for postgresql"; sleep 3; done;']
        - name: init-postgresql-database
          image: postgres:14.5
          env:
            - name: POSTGRES_INITDB_ARGS
              value: '--encoding=UTF-8 --lc-collate=en_US.utf8 --lc-ctype=en_US.utf8'
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: postgresql-root-username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresql-root-password
                  name: postgresql
          ports:
            - containerPort: 5432
              name: postgresql
          command: [ 'sh', '-c', "PGPASSWORD=$POSTGRES_PASSWORD createdb -h postgresql -U root skipper" ]
      serviceAccountName: scdf-sa
      volumes:
        - name: config
          configMap:
            name: skipper
            items:
              - key: application.yaml
                path: application.yaml
        - name: database
          secret:
            secretName: postgresql
